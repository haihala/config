#!/usr/bin/env bash

set -euxo pipefail

if [ "$#" -ne 0 ]; then
    # All arguments are passed directly to the editor, so e is short for $EDITOR
    # Only if no arguments are passed, does it start to do stuff
    exec $EDITOR $@
    exit 0
fi

actions=("Just open the editor"
    "Search by file name"
    "Search by content"
    "Search git status"
    "Search previous commit changed files"
    "Search arbitrary commit"
    "Search by file name (disregard .gitignore)"
)

preview_cmd='bat --style=numbers --color=always --line-range :500 {}'

case $(for I in ${!actions[@]}; do
    echo "$I: ${actions[$I]}"
done | fzf --print0 | cut -d ":" -f 1) in
0)
    exec $EDITOR
    ;;
1)
    result=$(FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix' \
        fzf --print0 --preview "$preview_cmd" |
        xargs -0 -o)
    exec $EDITOR $result
    ;;
2)
    # Fuzzy find against current folder contents, match file name, line and column
    rg_prefix='rg --no-heading --line-number --column --smart-case --color=always'
    result=$(
        fzf --bind "start:reload:$rg_prefix ''" \
            --bind "change:reload:$rg_prefix {q} || true" \
            --ansi --print0 |
            xargs -0 -o |
            cut -d ':' -f 1-3
    )
    parts=(${result//:/ })
    result=${parts[0]}
    line=${parts[1]}
    column=${parts[2]}
    exec $EDITOR $result "+call cursor($line, $column)"
    ;;
3)
    result=($(git status -s | fzf --ansi --print0 | xargs -0 -o))
    exec $EDITOR ${result[1]} # Number is here to get the non-status thingy
    ;;
4)
    result=$(git diff-tree --no-commit-id --name-only HEAD -r | fzf --print0 | xargs -0 -o)
    exec $EDITOR ${result}
    ;;
5)
    commit_hash=$(git log --all --oneline --color=always | fzf --ansi --print0 | xargs -0 -o | cut -d' ' -f1)
    result=$(git diff-tree --no-commit-id --name-only $commit_hash -r | fzf --print0 | xargs -0 -o)
    exec $EDITOR ${result}
    ;;
6)
    result=$(fzf --print0 --preview "$preview_cmd" | xargs -0 -o)
    exec $EDITOR $result
    ;;
esac
